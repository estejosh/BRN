version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: brn_app
      POSTGRES_USER: brn_user
      POSTGRES_PASSWORD: brn_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - brn_network

  # Redis for caching
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - brn_network

  # BRN Backend API
  brn_backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: postgresql://brn_user:brn_password@postgres:5432/brn_app
      REDIS_URL: redis://redis:6379
      HIVE_NODE: https://api.hive.blog
      HIVE_APP_USERNAME: brn_app
      HIVE_APP_POSTING_KEY: ${HIVE_APP_POSTING_KEY}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./backend:/app
    networks:
      - brn_network
    restart: unless-stopped

  # BRN Node (for Layer 2 consensus)
  brn_node:
    build:
      context: ./nodes
      dockerfile: Dockerfile
    environment:
      NODE_ID: ${NODE_ID}
      STAKE_AMOUNT: ${STAKE_AMOUNT}
      NETWORK_ID: brn-layer2
      BACKEND_URL: http://brn_backend:8000
    ports:
      - "8001:8000"
    depends_on:
      - brn_backend
    networks:
      - brn_network
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - brn_backend
    networks:
      - brn_network
    restart: unless-stopped

  # Monitoring (Prometheus + Grafana)
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - brn_network

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - brn_network

volumes:
  postgres_data:
  prometheus_data:
  grafana_data:

networks:
  brn_network:
    driver: bridge 